{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1lzR-s3EhapXrvwnXEOtlqXa74vRVM7ls","authorship_tag":"ABX9TyOzKI5rCWo1pcEg76oB3+aj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"8mpjHuJpGWqY","executionInfo":{"status":"ok","timestamp":1747648736660,"user_tz":-330,"elapsed":2851,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["orders_df = pd.read_csv('/content/drive/MyDrive/orders.csv')"],"metadata":{"id":"s3hifzBiImyc","executionInfo":{"status":"ok","timestamp":1747648737077,"user_tz":-330,"elapsed":419,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["returns_df = pd.read_csv('/content/drive/MyDrive/returns.csv')"],"metadata":{"id":"Q4KK4PACIwkm","executionInfo":{"status":"ok","timestamp":1747648737327,"user_tz":-330,"elapsed":249,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["orders_df['order_date'] = pd.to_datetime(orders_df['order_date'])\n","returns_df['return_date'] = pd.to_datetime(returns_df['return_date'])"],"metadata":{"id":"Dqr7RgO_I3p6","executionInfo":{"status":"ok","timestamp":1747648737419,"user_tz":-330,"elapsed":91,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["orders_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"4AKBXYtwQ4LW","executionInfo":{"status":"ok","timestamp":1747648737844,"user_tz":-330,"elapsed":428,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"bfc6bb2d-649d-49d8-ba8e-bc31922615b2"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  order_id product_id product_name category supplier   price  quantity  \\\n","0  O100000      P2046       Parent    Books   BrandB  263.23         2   \n","1  O100001      P7574         Care   Beauty   BrandD  308.86         1   \n","2  O100002      P8632       Entire   Beauty   BrandD  399.34         1   \n","3  O100003      P4772           Of  Apparel   BrandD  215.58         1   \n","4  O100004      P7846       Remain    Books   BrandB  194.82         3   \n","\n","  order_date customer_id region              city marketing_channel  \n","0 2025-03-29       C7756   West  North Jasonmouth             Email  \n","1 2025-02-28       C5597  North      Darleneville        Influencer  \n","2 2025-01-22       C2046   East        Mollyshire             Email  \n","3 2025-04-28       C1447   West  North Adriantown      Social Media  \n","4 2025-04-25       C9698   West   South Cesarberg      Social Media  "],"text/html":["\n","  <div id=\"df-746f021d-fdea-455d-80b2-234e624942c4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","      <th>category</th>\n","      <th>supplier</th>\n","      <th>price</th>\n","      <th>quantity</th>\n","      <th>order_date</th>\n","      <th>customer_id</th>\n","      <th>region</th>\n","      <th>city</th>\n","      <th>marketing_channel</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>O100000</td>\n","      <td>P2046</td>\n","      <td>Parent</td>\n","      <td>Books</td>\n","      <td>BrandB</td>\n","      <td>263.23</td>\n","      <td>2</td>\n","      <td>2025-03-29</td>\n","      <td>C7756</td>\n","      <td>West</td>\n","      <td>North Jasonmouth</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>O100001</td>\n","      <td>P7574</td>\n","      <td>Care</td>\n","      <td>Beauty</td>\n","      <td>BrandD</td>\n","      <td>308.86</td>\n","      <td>1</td>\n","      <td>2025-02-28</td>\n","      <td>C5597</td>\n","      <td>North</td>\n","      <td>Darleneville</td>\n","      <td>Influencer</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>O100002</td>\n","      <td>P8632</td>\n","      <td>Entire</td>\n","      <td>Beauty</td>\n","      <td>BrandD</td>\n","      <td>399.34</td>\n","      <td>1</td>\n","      <td>2025-01-22</td>\n","      <td>C2046</td>\n","      <td>East</td>\n","      <td>Mollyshire</td>\n","      <td>Email</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>O100003</td>\n","      <td>P4772</td>\n","      <td>Of</td>\n","      <td>Apparel</td>\n","      <td>BrandD</td>\n","      <td>215.58</td>\n","      <td>1</td>\n","      <td>2025-04-28</td>\n","      <td>C1447</td>\n","      <td>West</td>\n","      <td>North Adriantown</td>\n","      <td>Social Media</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>O100004</td>\n","      <td>P7846</td>\n","      <td>Remain</td>\n","      <td>Books</td>\n","      <td>BrandB</td>\n","      <td>194.82</td>\n","      <td>3</td>\n","      <td>2025-04-25</td>\n","      <td>C9698</td>\n","      <td>West</td>\n","      <td>South Cesarberg</td>\n","      <td>Social Media</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-746f021d-fdea-455d-80b2-234e624942c4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-746f021d-fdea-455d-80b2-234e624942c4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-746f021d-fdea-455d-80b2-234e624942c4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4fb47130-963f-4b69-be8d-e5ed67791abc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4fb47130-963f-4b69-be8d-e5ed67791abc')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4fb47130-963f-4b69-be8d-e5ed67791abc button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"orders_df","summary":"{\n  \"name\": \"orders_df\",\n  \"rows\": 1500,\n  \"fields\": [\n    {\n      \"column\": \"order_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1500,\n        \"samples\": [\n          \"O101116\",\n          \"O101368\",\n          \"O100422\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1374,\n        \"samples\": [\n          \"P7449\",\n          \"P8058\",\n          \"P9989\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 762,\n        \"samples\": [\n          \"Court\",\n          \"Say\",\n          \"Every\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Beauty\",\n          \"Home\",\n          \"Apparel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"supplier\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"BrandD\",\n          \"BrandA\",\n          \"BrandB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 140.72965399108904,\n        \"min\": 10.03,\n        \"max\": 499.97,\n        \"num_unique_values\": 1479,\n        \"samples\": [\n          460.9,\n          413.06,\n          156.92\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"order_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-11-10 00:00:00\",\n        \"max\": \"2025-05-11 00:00:00\",\n        \"num_unique_values\": 183,\n        \"samples\": [\n          \"2024-12-15 00:00:00\",\n          \"2025-01-17 00:00:00\",\n          \"2024-12-10 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1379,\n        \"samples\": [\n          \"C5126\",\n          \"C6514\",\n          \"C4359\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"North\",\n          \"South\",\n          \"West\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1429,\n        \"samples\": [\n          \"Leslietown\",\n          \"Grantberg\",\n          \"Markland\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marketing_channel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Influencer\",\n          \"Ads\",\n          \"Social Media\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["returns_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZtOSVgzBRE_d","executionInfo":{"status":"ok","timestamp":1747648738017,"user_tz":-330,"elapsed":172,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"0ce9784f-bb92-43db-e6dd-e2e97c06d13d"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  order_id return_date     return_reason return_status\n","0  O101116  2025-04-19      Changed mind        Denied\n","1  O101368  2025-01-23         Defective        Denied\n","2  O100422  2025-01-06  Not as described        Denied\n","3  O100413  2025-03-09     Late delivery      Approved\n","4  O100451  2025-05-05         Defective      Approved"],"text/html":["\n","  <div id=\"df-05e111ed-6b1d-49c1-aa76-e314d921e85e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>return_date</th>\n","      <th>return_reason</th>\n","      <th>return_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>O101116</td>\n","      <td>2025-04-19</td>\n","      <td>Changed mind</td>\n","      <td>Denied</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>O101368</td>\n","      <td>2025-01-23</td>\n","      <td>Defective</td>\n","      <td>Denied</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>O100422</td>\n","      <td>2025-01-06</td>\n","      <td>Not as described</td>\n","      <td>Denied</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>O100413</td>\n","      <td>2025-03-09</td>\n","      <td>Late delivery</td>\n","      <td>Approved</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>O100451</td>\n","      <td>2025-05-05</td>\n","      <td>Defective</td>\n","      <td>Approved</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-05e111ed-6b1d-49c1-aa76-e314d921e85e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-05e111ed-6b1d-49c1-aa76-e314d921e85e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-05e111ed-6b1d-49c1-aa76-e314d921e85e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1c34fe19-1e97-47dd-853a-9db70ec7d822\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1c34fe19-1e97-47dd-853a-9db70ec7d822')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1c34fe19-1e97-47dd-853a-9db70ec7d822 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"returns_df","summary":"{\n  \"name\": \"returns_df\",\n  \"rows\": 375,\n  \"fields\": [\n    {\n      \"column\": \"order_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 375,\n        \"samples\": [\n          \"O101052\",\n          \"O101041\",\n          \"O101268\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-11-15 00:00:00\",\n        \"max\": \"2025-05-26 00:00:00\",\n        \"num_unique_values\": 166,\n        \"samples\": [\n          \"2024-12-01 00:00:00\",\n          \"2025-02-27 00:00:00\",\n          \"2024-12-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_reason\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Defective\",\n          \"Wrong item\",\n          \"Not as described\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Approved\",\n          \"Denied\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["orders_df = orders_df.dropna(subset=['order_id'])\n","returns_df = returns_df.dropna(subset=['order_id'])"],"metadata":{"id":"l_YAakxnRVYG","executionInfo":{"status":"ok","timestamp":1747648738022,"user_tz":-330,"elapsed":3,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["#Remove duplicates\n","orders_df = orders_df.drop_duplicates(subset='order_id')\n","returns_df = returns_df.drop_duplicates(subset='order_id')"],"metadata":{"id":"WZ3ZVj2Dk7am","executionInfo":{"status":"ok","timestamp":1747648738067,"user_tz":-330,"elapsed":41,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["#Merge orders and returns on order_id\n","df = orders_df.merge(returns_df, on='order_id', how='left')"],"metadata":{"id":"fvZGAUlJlzoS","executionInfo":{"status":"ok","timestamp":1747648738068,"user_tz":-330,"elapsed":16,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"MrT5mS1ml7Dz","executionInfo":{"status":"ok","timestamp":1747648738317,"user_tz":-330,"elapsed":251,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"22555ca2-4757-4370-ce97-824437ee16b2"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  order_id product_id product_name category supplier   price  quantity  \\\n","0  O100000      P2046       Parent    Books   BrandB  263.23         2   \n","1  O100001      P7574         Care   Beauty   BrandD  308.86         1   \n","2  O100002      P8632       Entire   Beauty   BrandD  399.34         1   \n","3  O100003      P4772           Of  Apparel   BrandD  215.58         1   \n","4  O100004      P7846       Remain    Books   BrandB  194.82         3   \n","\n","  order_date customer_id region              city marketing_channel  \\\n","0 2025-03-29       C7756   West  North Jasonmouth             Email   \n","1 2025-02-28       C5597  North      Darleneville        Influencer   \n","2 2025-01-22       C2046   East        Mollyshire             Email   \n","3 2025-04-28       C1447   West  North Adriantown      Social Media   \n","4 2025-04-25       C9698   West   South Cesarberg      Social Media   \n","\n","  return_date return_reason return_status  \n","0         NaT           NaN           NaN  \n","1         NaT           NaN           NaN  \n","2         NaT           NaN           NaN  \n","3         NaT           NaN           NaN  \n","4         NaT           NaN           NaN  "],"text/html":["\n","  <div id=\"df-2f4fb127-e449-48f2-9d4f-67ecb5a15669\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","      <th>category</th>\n","      <th>supplier</th>\n","      <th>price</th>\n","      <th>quantity</th>\n","      <th>order_date</th>\n","      <th>customer_id</th>\n","      <th>region</th>\n","      <th>city</th>\n","      <th>marketing_channel</th>\n","      <th>return_date</th>\n","      <th>return_reason</th>\n","      <th>return_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>O100000</td>\n","      <td>P2046</td>\n","      <td>Parent</td>\n","      <td>Books</td>\n","      <td>BrandB</td>\n","      <td>263.23</td>\n","      <td>2</td>\n","      <td>2025-03-29</td>\n","      <td>C7756</td>\n","      <td>West</td>\n","      <td>North Jasonmouth</td>\n","      <td>Email</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>O100001</td>\n","      <td>P7574</td>\n","      <td>Care</td>\n","      <td>Beauty</td>\n","      <td>BrandD</td>\n","      <td>308.86</td>\n","      <td>1</td>\n","      <td>2025-02-28</td>\n","      <td>C5597</td>\n","      <td>North</td>\n","      <td>Darleneville</td>\n","      <td>Influencer</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>O100002</td>\n","      <td>P8632</td>\n","      <td>Entire</td>\n","      <td>Beauty</td>\n","      <td>BrandD</td>\n","      <td>399.34</td>\n","      <td>1</td>\n","      <td>2025-01-22</td>\n","      <td>C2046</td>\n","      <td>East</td>\n","      <td>Mollyshire</td>\n","      <td>Email</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>O100003</td>\n","      <td>P4772</td>\n","      <td>Of</td>\n","      <td>Apparel</td>\n","      <td>BrandD</td>\n","      <td>215.58</td>\n","      <td>1</td>\n","      <td>2025-04-28</td>\n","      <td>C1447</td>\n","      <td>West</td>\n","      <td>North Adriantown</td>\n","      <td>Social Media</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>O100004</td>\n","      <td>P7846</td>\n","      <td>Remain</td>\n","      <td>Books</td>\n","      <td>BrandB</td>\n","      <td>194.82</td>\n","      <td>3</td>\n","      <td>2025-04-25</td>\n","      <td>C9698</td>\n","      <td>West</td>\n","      <td>South Cesarberg</td>\n","      <td>Social Media</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f4fb127-e449-48f2-9d4f-67ecb5a15669')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2f4fb127-e449-48f2-9d4f-67ecb5a15669 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2f4fb127-e449-48f2-9d4f-67ecb5a15669');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7099c915-6d26-44bf-a4f7-6800540a206f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7099c915-6d26-44bf-a4f7-6800540a206f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7099c915-6d26-44bf-a4f7-6800540a206f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1500,\n  \"fields\": [\n    {\n      \"column\": \"order_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1500,\n        \"samples\": [\n          \"O101116\",\n          \"O101368\",\n          \"O100422\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1374,\n        \"samples\": [\n          \"P7449\",\n          \"P8058\",\n          \"P9989\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 762,\n        \"samples\": [\n          \"Court\",\n          \"Say\",\n          \"Every\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Beauty\",\n          \"Home\",\n          \"Apparel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"supplier\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"BrandD\",\n          \"BrandA\",\n          \"BrandB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 140.72965399108904,\n        \"min\": 10.03,\n        \"max\": 499.97,\n        \"num_unique_values\": 1479,\n        \"samples\": [\n          460.9,\n          413.06,\n          156.92\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"order_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-11-10 00:00:00\",\n        \"max\": \"2025-05-11 00:00:00\",\n        \"num_unique_values\": 183,\n        \"samples\": [\n          \"2024-12-15 00:00:00\",\n          \"2025-01-17 00:00:00\",\n          \"2024-12-10 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1379,\n        \"samples\": [\n          \"C5126\",\n          \"C6514\",\n          \"C4359\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"North\",\n          \"South\",\n          \"West\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1429,\n        \"samples\": [\n          \"Leslietown\",\n          \"Grantberg\",\n          \"Markland\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marketing_channel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Influencer\",\n          \"Ads\",\n          \"Social Media\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-11-15 00:00:00\",\n        \"max\": \"2025-05-26 00:00:00\",\n        \"num_unique_values\": 166,\n        \"samples\": [\n          \"2024-11-24 00:00:00\",\n          \"2025-03-11 00:00:00\",\n          \"2025-01-04 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_reason\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Not as described\",\n          \"Changed mind\",\n          \"Defective\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Denied\",\n          \"Approved\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zCwjub8Eu17P","executionInfo":{"status":"ok","timestamp":1747648738363,"user_tz":-330,"elapsed":48,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"26f6f913-20e1-4a43-f0ab-cf171eb25e4d"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1500 entries, 0 to 1499\n","Data columns (total 15 columns):\n"," #   Column             Non-Null Count  Dtype         \n","---  ------             --------------  -----         \n"," 0   order_id           1500 non-null   object        \n"," 1   product_id         1500 non-null   object        \n"," 2   product_name       1499 non-null   object        \n"," 3   category           1500 non-null   object        \n"," 4   supplier           1500 non-null   object        \n"," 5   price              1500 non-null   float64       \n"," 6   quantity           1500 non-null   int64         \n"," 7   order_date         1500 non-null   datetime64[ns]\n"," 8   customer_id        1500 non-null   object        \n"," 9   region             1500 non-null   object        \n"," 10  city               1500 non-null   object        \n"," 11  marketing_channel  1500 non-null   object        \n"," 12  return_date        375 non-null    datetime64[ns]\n"," 13  return_reason      375 non-null    object        \n"," 14  return_status      375 non-null    object        \n","dtypes: datetime64[ns](2), float64(1), int64(1), object(11)\n","memory usage: 175.9+ KB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"os5AWPPavIq6","executionInfo":{"status":"ok","timestamp":1747648738563,"user_tz":-330,"elapsed":199,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"3b286248-5010-444d-ddf3-b00ba5cb6078"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             price     quantity                  order_date  \\\n","count  1500.000000  1500.000000                        1500   \n","mean    254.614700     1.998667  2025-02-09 14:42:14.400000   \n","min      10.030000     1.000000         2024-11-10 00:00:00   \n","25%     133.807500     1.000000         2024-12-26 00:00:00   \n","50%     258.710000     2.000000         2025-02-07 12:00:00   \n","75%     378.957500     3.000000         2025-03-29 00:00:00   \n","max     499.970000     3.000000         2025-05-11 00:00:00   \n","std     140.729654     0.815951                         NaN   \n","\n","                         return_date  \n","count                            375  \n","mean   2025-02-17 02:22:04.800000256  \n","min              2024-11-15 00:00:00  \n","25%              2025-01-01 00:00:00  \n","50%              2025-02-15 00:00:00  \n","75%              2025-04-09 00:00:00  \n","max              2025-05-26 00:00:00  \n","std                              NaN  "],"text/html":["\n","  <div id=\"df-3172aa60-32be-4610-9502-9ddafcadad7a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>quantity</th>\n","      <th>order_date</th>\n","      <th>return_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1500.000000</td>\n","      <td>1500.000000</td>\n","      <td>1500</td>\n","      <td>375</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>254.614700</td>\n","      <td>1.998667</td>\n","      <td>2025-02-09 14:42:14.400000</td>\n","      <td>2025-02-17 02:22:04.800000256</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>10.030000</td>\n","      <td>1.000000</td>\n","      <td>2024-11-10 00:00:00</td>\n","      <td>2024-11-15 00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>133.807500</td>\n","      <td>1.000000</td>\n","      <td>2024-12-26 00:00:00</td>\n","      <td>2025-01-01 00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>258.710000</td>\n","      <td>2.000000</td>\n","      <td>2025-02-07 12:00:00</td>\n","      <td>2025-02-15 00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>378.957500</td>\n","      <td>3.000000</td>\n","      <td>2025-03-29 00:00:00</td>\n","      <td>2025-04-09 00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>499.970000</td>\n","      <td>3.000000</td>\n","      <td>2025-05-11 00:00:00</td>\n","      <td>2025-05-26 00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>140.729654</td>\n","      <td>0.815951</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3172aa60-32be-4610-9502-9ddafcadad7a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3172aa60-32be-4610-9502-9ddafcadad7a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3172aa60-32be-4610-9502-9ddafcadad7a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-016b5f2a-a015-4cf7-b4c8-30f79338bab9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-016b5f2a-a015-4cf7-b4c8-30f79338bab9')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-016b5f2a-a015-4cf7-b4c8-30f79338bab9 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 470.80865536170796,\n        \"min\": 10.03,\n        \"max\": 1500.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          254.61470000000003,\n          378.9575,\n          1500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 529.6835513723917,\n        \"min\": 0.8159506148205928,\n        \"max\": 1500.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1500.0,\n          1.9986666666666666,\n          0.8159506148205928\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"order_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000001500\",\n        \"max\": \"2025-05-11 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"1500\",\n          \"2025-02-09 14:42:14.400000\",\n          \"2025-03-29 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000000375\",\n        \"max\": \"2025-05-26 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"375\",\n          \"2025-02-17 02:22:04.800000256\",\n          \"2025-04-09 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UfDm5OoPvNhp","executionInfo":{"status":"ok","timestamp":1747648738575,"user_tz":-330,"elapsed":10,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"cdd32039-0658-4898-c954-ac954b77c449"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['order_id', 'product_id', 'product_name', 'category', 'supplier',\n","       'price', 'quantity', 'order_date', 'customer_id', 'region', 'city',\n","       'marketing_channel', 'return_date', 'return_reason', 'return_status'],\n","      dtype='object')"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jcyaxK7_vRRI","executionInfo":{"status":"ok","timestamp":1747648738630,"user_tz":-330,"elapsed":38,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"bee7d60d-c612-4bd2-9431-e7113536772d"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(0)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"id":"O6fD4Vo3vdEn","executionInfo":{"status":"ok","timestamp":1747648738670,"user_tz":-330,"elapsed":42,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"1af3091a-9b76-408e-c4fb-dada418c39b4"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id                     object\n","product_id                   object\n","product_name                 object\n","category                     object\n","supplier                     object\n","price                       float64\n","quantity                      int64\n","order_date           datetime64[ns]\n","customer_id                  object\n","region                       object\n","city                         object\n","marketing_channel            object\n","return_date          datetime64[ns]\n","return_reason                object\n","return_status                object\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>order_id</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>product_name</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>supplier</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>quantity</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>order_date</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>customer_id</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>marketing_channel</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>return_date</th>\n","      <td>datetime64[ns]</td>\n","    </tr>\n","    <tr>\n","      <th>return_reason</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>return_status</th>\n","      <td>object</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"id":"d-RlsPT1vgbQ","executionInfo":{"status":"ok","timestamp":1747648738709,"user_tz":-330,"elapsed":42,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"45b02fd7-b327-4cfc-d502-022a933ef784"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id                0\n","product_id              0\n","product_name            1\n","category                0\n","supplier                0\n","price                   0\n","quantity                0\n","order_date              0\n","customer_id             0\n","region                  0\n","city                    0\n","marketing_channel       0\n","return_date          1125\n","return_reason        1125\n","return_status        1125\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>order_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_name</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>supplier</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>quantity</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>order_date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>customer_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>marketing_channel</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_date</th>\n","      <td>1125</td>\n","    </tr>\n","    <tr>\n","      <th>return_reason</th>\n","      <td>1125</td>\n","    </tr>\n","    <tr>\n","      <th>return_status</th>\n","      <td>1125</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#add \"is_returned\" column\n","df['is_returned'] = df['return_date'].notnull().astype(int)"],"metadata":{"id":"EYdWaVIWl-5t","executionInfo":{"status":"ok","timestamp":1747648738798,"user_tz":-330,"elapsed":70,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":["this line creates a new column called is_returned, which tells us whether a product was returned or not — as a 0 or 1.\n","this checks each row in the return_date column.\n","if the return_date is not null (i.e., a valid date exists), it returns True.\n","if return_date is missing (NaN), it returns False.\n","and converts the Boolean values (True, False) to integers 1,0."],"metadata":{"id":"gjXJZjXVFaXu"}},{"cell_type":"code","source":["#calculate number of days between order and return\n","df['return_days'] = (df['return_date'] - df['order_date']).dt.days\n","df['return_days'] = df['return_days'].fillna(0).astype(int)"],"metadata":{"id":"Q-XSAmGzFPjb","executionInfo":{"status":"ok","timestamp":1747648738799,"user_tz":-330,"elapsed":3,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":18,"outputs":[]},{"cell_type":"markdown","source":[".dt is a pandas datetime accessor that allows us to extract components of datetime objects (like .year, .month, .day, .days, etc.)"],"metadata":{"id":"8tVTGYfLHU1a"}},{"cell_type":"code","source":["#Fill missing return_reason/status with 'Not Returned'\n","df['return_reason'] = df['return_reason'].fillna('Not Returned')\n","df['return_status'] = df['return_status'].fillna('Not Returned')"],"metadata":{"id":"UBKHUGkWwC6q","executionInfo":{"status":"ok","timestamp":1747648738819,"user_tz":-330,"elapsed":19,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"fZdYnxm0wGpQ","executionInfo":{"status":"ok","timestamp":1747648738877,"user_tz":-330,"elapsed":62,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"0115dedc-5e9e-4c14-a8a3-45853e93fb77"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id                0\n","product_id              0\n","product_name            1\n","category                0\n","supplier                0\n","price                   0\n","quantity                0\n","order_date              0\n","customer_id             0\n","region                  0\n","city                    0\n","marketing_channel       0\n","return_date          1125\n","return_reason           0\n","return_status           0\n","is_returned             0\n","return_days             0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>order_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_name</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>supplier</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>quantity</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>order_date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>customer_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>marketing_channel</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_date</th>\n","      <td>1125</td>\n","    </tr>\n","    <tr>\n","      <th>return_reason</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>is_returned</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_days</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["df['product_name'] = df['product_name'].fillna('Unknown Product')"],"metadata":{"id":"d-vghQv9xBzR","executionInfo":{"status":"ok","timestamp":1747648738931,"user_tz":-330,"elapsed":53,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"OvlYID-4xDYJ","executionInfo":{"status":"ok","timestamp":1747648738945,"user_tz":-330,"elapsed":12,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"7fac7b00-1cd9-4f90-95f9-726f28cefdb1"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id                0\n","product_id              0\n","product_name            0\n","category                0\n","supplier                0\n","price                   0\n","quantity                0\n","order_date              0\n","customer_id             0\n","region                  0\n","city                    0\n","marketing_channel       0\n","return_date          1125\n","return_reason           0\n","return_status           0\n","is_returned             0\n","return_days             0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>order_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>supplier</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>quantity</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>order_date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>customer_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>marketing_channel</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_date</th>\n","      <td>1125</td>\n","    </tr>\n","    <tr>\n","      <th>return_reason</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>is_returned</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_days</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":278},"id":"OUlv12VqHUCX","executionInfo":{"status":"ok","timestamp":1747648739083,"user_tz":-330,"elapsed":136,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"82b7a075-a98c-43f0-e8a0-f5b3a5d7a489"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  order_id product_id product_name category supplier   price  quantity  \\\n","0  O100000      P2046       Parent    Books   BrandB  263.23         2   \n","1  O100001      P7574         Care   Beauty   BrandD  308.86         1   \n","2  O100002      P8632       Entire   Beauty   BrandD  399.34         1   \n","3  O100003      P4772           Of  Apparel   BrandD  215.58         1   \n","4  O100004      P7846       Remain    Books   BrandB  194.82         3   \n","\n","  order_date customer_id region              city marketing_channel  \\\n","0 2025-03-29       C7756   West  North Jasonmouth             Email   \n","1 2025-02-28       C5597  North      Darleneville        Influencer   \n","2 2025-01-22       C2046   East        Mollyshire             Email   \n","3 2025-04-28       C1447   West  North Adriantown      Social Media   \n","4 2025-04-25       C9698   West   South Cesarberg      Social Media   \n","\n","  return_date return_reason return_status  is_returned  return_days  \n","0         NaT  Not Returned  Not Returned            0            0  \n","1         NaT  Not Returned  Not Returned            0            0  \n","2         NaT  Not Returned  Not Returned            0            0  \n","3         NaT  Not Returned  Not Returned            0            0  \n","4         NaT  Not Returned  Not Returned            0            0  "],"text/html":["\n","  <div id=\"df-4633a5de-3b23-468d-8165-9c81d58bf5a0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","      <th>category</th>\n","      <th>supplier</th>\n","      <th>price</th>\n","      <th>quantity</th>\n","      <th>order_date</th>\n","      <th>customer_id</th>\n","      <th>region</th>\n","      <th>city</th>\n","      <th>marketing_channel</th>\n","      <th>return_date</th>\n","      <th>return_reason</th>\n","      <th>return_status</th>\n","      <th>is_returned</th>\n","      <th>return_days</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>O100000</td>\n","      <td>P2046</td>\n","      <td>Parent</td>\n","      <td>Books</td>\n","      <td>BrandB</td>\n","      <td>263.23</td>\n","      <td>2</td>\n","      <td>2025-03-29</td>\n","      <td>C7756</td>\n","      <td>West</td>\n","      <td>North Jasonmouth</td>\n","      <td>Email</td>\n","      <td>NaT</td>\n","      <td>Not Returned</td>\n","      <td>Not Returned</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>O100001</td>\n","      <td>P7574</td>\n","      <td>Care</td>\n","      <td>Beauty</td>\n","      <td>BrandD</td>\n","      <td>308.86</td>\n","      <td>1</td>\n","      <td>2025-02-28</td>\n","      <td>C5597</td>\n","      <td>North</td>\n","      <td>Darleneville</td>\n","      <td>Influencer</td>\n","      <td>NaT</td>\n","      <td>Not Returned</td>\n","      <td>Not Returned</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>O100002</td>\n","      <td>P8632</td>\n","      <td>Entire</td>\n","      <td>Beauty</td>\n","      <td>BrandD</td>\n","      <td>399.34</td>\n","      <td>1</td>\n","      <td>2025-01-22</td>\n","      <td>C2046</td>\n","      <td>East</td>\n","      <td>Mollyshire</td>\n","      <td>Email</td>\n","      <td>NaT</td>\n","      <td>Not Returned</td>\n","      <td>Not Returned</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>O100003</td>\n","      <td>P4772</td>\n","      <td>Of</td>\n","      <td>Apparel</td>\n","      <td>BrandD</td>\n","      <td>215.58</td>\n","      <td>1</td>\n","      <td>2025-04-28</td>\n","      <td>C1447</td>\n","      <td>West</td>\n","      <td>North Adriantown</td>\n","      <td>Social Media</td>\n","      <td>NaT</td>\n","      <td>Not Returned</td>\n","      <td>Not Returned</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>O100004</td>\n","      <td>P7846</td>\n","      <td>Remain</td>\n","      <td>Books</td>\n","      <td>BrandB</td>\n","      <td>194.82</td>\n","      <td>3</td>\n","      <td>2025-04-25</td>\n","      <td>C9698</td>\n","      <td>West</td>\n","      <td>South Cesarberg</td>\n","      <td>Social Media</td>\n","      <td>NaT</td>\n","      <td>Not Returned</td>\n","      <td>Not Returned</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4633a5de-3b23-468d-8165-9c81d58bf5a0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4633a5de-3b23-468d-8165-9c81d58bf5a0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4633a5de-3b23-468d-8165-9c81d58bf5a0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-87d2f4dc-ea84-417a-bb59-d66d40a74deb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-87d2f4dc-ea84-417a-bb59-d66d40a74deb')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-87d2f4dc-ea84-417a-bb59-d66d40a74deb button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1500,\n  \"fields\": [\n    {\n      \"column\": \"order_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1500,\n        \"samples\": [\n          \"O101116\",\n          \"O101368\",\n          \"O100422\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1374,\n        \"samples\": [\n          \"P7449\",\n          \"P8058\",\n          \"P9989\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 763,\n        \"samples\": [\n          \"Beyond\",\n          \"Friend\",\n          \"Else\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Beauty\",\n          \"Home\",\n          \"Apparel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"supplier\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"BrandD\",\n          \"BrandA\",\n          \"BrandB\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 140.72965399108904,\n        \"min\": 10.03,\n        \"max\": 499.97,\n        \"num_unique_values\": 1479,\n        \"samples\": [\n          460.9,\n          413.06,\n          156.92\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"order_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-11-10 00:00:00\",\n        \"max\": \"2025-05-11 00:00:00\",\n        \"num_unique_values\": 183,\n        \"samples\": [\n          \"2024-12-15 00:00:00\",\n          \"2025-01-17 00:00:00\",\n          \"2024-12-10 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1379,\n        \"samples\": [\n          \"C5126\",\n          \"C6514\",\n          \"C4359\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"North\",\n          \"South\",\n          \"West\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1429,\n        \"samples\": [\n          \"Leslietown\",\n          \"Grantberg\",\n          \"Markland\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marketing_channel\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Influencer\",\n          \"Ads\",\n          \"Social Media\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-11-15 00:00:00\",\n        \"max\": \"2025-05-26 00:00:00\",\n        \"num_unique_values\": 166,\n        \"samples\": [\n          \"2024-11-24 00:00:00\",\n          \"2025-03-11 00:00:00\",\n          \"2025-01-04 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_reason\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Not Returned\",\n          \"Wrong item\",\n          \"Changed mind\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Not Returned\",\n          \"Approved\",\n          \"Denied\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_returned\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 0,\n        \"max\": 15,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          4,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["df.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":243},"id":"PUHw4cdCHwph","executionInfo":{"status":"ok","timestamp":1747648739315,"user_tz":-330,"elapsed":245,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"36b13c2d-b560-4a4e-ec07-9048225c84c5"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     order_id product_id product_name     category supplier   price  quantity  \\\n","1495  O101495      P2004        Water      Apparel   BrandC  425.65         3   \n","1496  O101496      P3788       Before  Electronics   BrandB  343.04         2   \n","1497  O101497      P4563      Against         Home   BrandD   29.39         2   \n","1498  O101498      P5231      Produce         Home   BrandA  352.95         3   \n","1499  O101499      P9233        Thing      Apparel   BrandA   88.17         1   \n","\n","     order_date customer_id region             city marketing_channel  \\\n","1495 2025-04-24       C6637  North  Kimberlyborough      Social Media   \n","1496 2025-04-12       C7595   East   Port Hollyport             Email   \n","1497 2025-03-07       C4839  South  West Andrewbury        Influencer   \n","1498 2024-12-09       C1887  North    New Marymouth            Direct   \n","1499 2025-04-25       C3450  North      East Lauren            Direct   \n","\n","     return_date return_reason return_status  is_returned  return_days  \n","1495  2025-04-26     Defective      Approved            1            2  \n","1496         NaT  Not Returned  Not Returned            0            0  \n","1497         NaT  Not Returned  Not Returned            0            0  \n","1498         NaT  Not Returned  Not Returned            0            0  \n","1499         NaT  Not Returned  Not Returned            0            0  "],"text/html":["\n","  <div id=\"df-fdd6f356-e305-44ec-b08b-3d0db58b8a9f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order_id</th>\n","      <th>product_id</th>\n","      <th>product_name</th>\n","      <th>category</th>\n","      <th>supplier</th>\n","      <th>price</th>\n","      <th>quantity</th>\n","      <th>order_date</th>\n","      <th>customer_id</th>\n","      <th>region</th>\n","      <th>city</th>\n","      <th>marketing_channel</th>\n","      <th>return_date</th>\n","      <th>return_reason</th>\n","      <th>return_status</th>\n","      <th>is_returned</th>\n","      <th>return_days</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1495</th>\n","      <td>O101495</td>\n","      <td>P2004</td>\n","      <td>Water</td>\n","      <td>Apparel</td>\n","      <td>BrandC</td>\n","      <td>425.65</td>\n","      <td>3</td>\n","      <td>2025-04-24</td>\n","      <td>C6637</td>\n","      <td>North</td>\n","      <td>Kimberlyborough</td>\n","      <td>Social Media</td>\n","      <td>2025-04-26</td>\n","      <td>Defective</td>\n","      <td>Approved</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1496</th>\n","      <td>O101496</td>\n","      <td>P3788</td>\n","      <td>Before</td>\n","      <td>Electronics</td>\n","      <td>BrandB</td>\n","      <td>343.04</td>\n","      <td>2</td>\n","      <td>2025-04-12</td>\n","      <td>C7595</td>\n","      <td>East</td>\n","      <td>Port Hollyport</td>\n","      <td>Email</td>\n","      <td>NaT</td>\n","      <td>Not Returned</td>\n","      <td>Not Returned</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1497</th>\n","      <td>O101497</td>\n","      <td>P4563</td>\n","      <td>Against</td>\n","      <td>Home</td>\n","      <td>BrandD</td>\n","      <td>29.39</td>\n","      <td>2</td>\n","      <td>2025-03-07</td>\n","      <td>C4839</td>\n","      <td>South</td>\n","      <td>West Andrewbury</td>\n","      <td>Influencer</td>\n","      <td>NaT</td>\n","      <td>Not Returned</td>\n","      <td>Not Returned</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1498</th>\n","      <td>O101498</td>\n","      <td>P5231</td>\n","      <td>Produce</td>\n","      <td>Home</td>\n","      <td>BrandA</td>\n","      <td>352.95</td>\n","      <td>3</td>\n","      <td>2024-12-09</td>\n","      <td>C1887</td>\n","      <td>North</td>\n","      <td>New Marymouth</td>\n","      <td>Direct</td>\n","      <td>NaT</td>\n","      <td>Not Returned</td>\n","      <td>Not Returned</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1499</th>\n","      <td>O101499</td>\n","      <td>P9233</td>\n","      <td>Thing</td>\n","      <td>Apparel</td>\n","      <td>BrandA</td>\n","      <td>88.17</td>\n","      <td>1</td>\n","      <td>2025-04-25</td>\n","      <td>C3450</td>\n","      <td>North</td>\n","      <td>East Lauren</td>\n","      <td>Direct</td>\n","      <td>NaT</td>\n","      <td>Not Returned</td>\n","      <td>Not Returned</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fdd6f356-e305-44ec-b08b-3d0db58b8a9f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fdd6f356-e305-44ec-b08b-3d0db58b8a9f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fdd6f356-e305-44ec-b08b-3d0db58b8a9f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-79406cdb-2157-4ff8-9ee7-d3545cf91b3e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-79406cdb-2157-4ff8-9ee7-d3545cf91b3e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-79406cdb-2157-4ff8-9ee7-d3545cf91b3e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"order_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"O101496\",\n          \"O101499\",\n          \"O101497\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"P3788\",\n          \"P9233\",\n          \"P4563\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Before\",\n          \"Thing\",\n          \"Against\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Apparel\",\n          \"Electronics\",\n          \"Home\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"supplier\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"BrandB\",\n          \"BrandA\",\n          \"BrandC\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 176.73600340621036,\n        \"min\": 29.39,\n        \"max\": 425.65,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          343.04,\n          88.17,\n          29.39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"order_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-12-09 00:00:00\",\n        \"max\": \"2025-04-25 00:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2025-04-12 00:00:00\",\n          \"2025-04-25 00:00:00\",\n          \"2025-03-07 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"C7595\",\n          \"C3450\",\n          \"C4839\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"region\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"North\",\n          \"East\",\n          \"South\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Port Hollyport\",\n          \"East Lauren\",\n          \"West Andrewbury\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marketing_channel\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Email\",\n          \"Direct\",\n          \"Social Media\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-04-26 00:00:00\",\n        \"max\": \"2025-04-26 00:00:00\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2025-04-26 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_reason\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Not Returned\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Not Returned\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"is_returned\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["sns.boxplot(data=df, x='is_returned', y='price',palette='viridis')\n","plt.title(\"Price Distribution by Return Status\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":559},"id":"EcSujjliITUn","executionInfo":{"status":"ok","timestamp":1747648740336,"user_tz":-330,"elapsed":1020,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"31bc2c76-46b4-40b5-9fd3-4e191c6162b6"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-25-93ba3f774298>:1: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.boxplot(data=df, x='is_returned', y='price',palette='viridis')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.barplot(data=df, x='category', y='is_returned',palette='magma')\n","plt.title(\"Return Rate by Category\")\n","plt.ylabel(\"Return Rate\")\n","plt.xlabel(\"Product Category\")\n","plt.xticks(rotation=45)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":608},"id":"mCz2b1E4ySu0","executionInfo":{"status":"ok","timestamp":1747648741833,"user_tz":-330,"elapsed":1494,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"09bcf277-1d63-46aa-87b0-418c04ba7163"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-26-11664309fda7>:1: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(data=df, x='category', y='is_returned',palette='magma')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.barplot(data=df, x='category', y='is_returned',palette='magma')\n","plt.title(\"Return Rate by Category\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":559},"id":"7jo3Q1OCydMC","executionInfo":{"status":"ok","timestamp":1747648743872,"user_tz":-330,"elapsed":2038,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"5fff1f41-8a28-4998-fb09-2821b9efa627"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-27-690cc91e2ef2>:1: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(data=df, x='category', y='is_returned',palette='magma')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.histplot(data=df[df['is_returned'] == 1], x='return_days', bins=20, kde=True)\n","plt.title(\"Distribution of Return Days\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"frlKmOwUyq5H","executionInfo":{"status":"ok","timestamp":1747648744945,"user_tz":-330,"elapsed":1076,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"57ecb025-e63a-411c-fd3f-f201537c77df"},"execution_count":28,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(6,4))\n","sns.barplot(data=df, x='region', y='is_returned',palette='Blues')\n","plt.title(\"Return Rate by Region\")\n","plt.xlabel(\"Region\")\n","plt.ylabel(\"Return Rate\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":497},"id":"Y16TZWJnzIvw","executionInfo":{"status":"ok","timestamp":1747648746033,"user_tz":-330,"elapsed":1087,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"1be535d6-5319-484f-ae4e-c1540f0e96aa"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-29-bee5bb8cd320>:2: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(data=df, x='region', y='is_returned',palette='Blues')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.boxplot(data=df[df['is_returned'] == 1], x='region', y='return_days', palette=\"cubehelix\")\n","plt.title(\"Distribution of Return Days by Region\", fontsize=14)\n","plt.ylabel(\"Return Days\")\n","plt.xlabel(\"Region\")\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"SuBdd_yPztpr","colab":{"base_uri":"https://localhost:8080/","height":694},"executionInfo":{"status":"ok","timestamp":1747648747005,"user_tz":-330,"elapsed":971,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"ee0ece11-7c0f-4061-95fa-fad112864da1"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-30-e528d0ca47d6>:2: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.boxplot(data=df[df['is_returned'] == 1], x='region', y='return_days', palette=\"cubehelix\")\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["heat_df = df.groupby(['category', 'region']).agg(return_rate=('is_returned', 'mean')).reset_index()\n","heat_pivot = heat_df.pivot(index='category', columns='region', values='return_rate') * 100\n","\n","plt.figure(figsize=(12, 6))\n","sns.heatmap(heat_pivot, annot=True, fmt=\".1f\", cmap=\"YlGnBu\", linewidths=.5)\n","plt.title(\"Return Rate Heatmap by Category and Region\", fontsize=16)\n","plt.ylabel(\"Category\")\n","plt.xlabel(\"Region\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":566},"id":"AWl86MBHz2uR","executionInfo":{"status":"ok","timestamp":1747648747815,"user_tz":-330,"elapsed":812,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"e962bd7a-2994-4adb-dfa3-c8a8b5841aea"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["avg_return_days = df[df['is_returned'] == 1].groupby('category')['return_days'].mean().sort_values(ascending=False)\n","\n","plt.figure(figsize=(10, 6))\n","sns.barplot(x=avg_return_days.values, y=avg_return_days.index, palette='coolwarm')\n","plt.title('Average Return Days by Category')\n","plt.xlabel('Average Return Days')\n","plt.ylabel('Category')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":651},"id":"tvcb46kd0L2B","executionInfo":{"status":"ok","timestamp":1747648748118,"user_tz":-330,"elapsed":301,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"3c36e1a6-d499-4e2b-a9c4-56fa2441c4ea"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-32-2d86c2c712df>:4: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(x=avg_return_days.values, y=avg_return_days.index, palette='coolwarm')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.to_csv('ecommerce_cleaned.csv', index=False)"],"metadata":{"id":"6GOLAfsFaf-P","executionInfo":{"status":"ok","timestamp":1747648748216,"user_tz":-330,"elapsed":96,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","files.download('ecommerce_cleaned.csv')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"iwJK0AIpapxT","executionInfo":{"status":"ok","timestamp":1747648748216,"user_tz":-330,"elapsed":31,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"8a3daf92-e48c-42aa-ad12-5a164fca5d6f"},"execution_count":34,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_a45e8500-a903-47ad-8773-98d3c96f4908\", \"ecommerce_cleaned.csv\", 180319)"]},"metadata":{}}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bt2JDcYIebEV","executionInfo":{"status":"ok","timestamp":1747648748217,"user_tz":-330,"elapsed":21,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"71cbbf6e-3ffa-4038-a1de-460934687c8c"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['order_id', 'product_id', 'product_name', 'category', 'supplier',\n","       'price', 'quantity', 'order_date', 'customer_id', 'region', 'city',\n","       'marketing_channel', 'return_date', 'return_reason', 'return_status',\n","       'is_returned', 'return_days'],\n","      dtype='object')"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["#Return % per Category\n","category_return_rate = df.groupby('category')['is_returned'].mean().sort_values(ascending=False) * 100\n","print(\"Return % per Category:\\n\", category_return_rate)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KLo9DoB1euZY","executionInfo":{"status":"ok","timestamp":1747648748233,"user_tz":-330,"elapsed":19,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"900746ba-7f7a-45f7-c66b-c27e1371a484"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Return % per Category:\n"," category\n","Electronics    27.848101\n","Home           26.870748\n","Beauty         26.451613\n","Books          23.465704\n","Apparel        20.132013\n","Name: is_returned, dtype: float64\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.barplot(x=category_return_rate.values, y=category_return_rate.index, palette='viridis')\n","plt.title('Return % by Category')\n","plt.xlabel('Return %')\n","plt.ylabel('Category')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":651},"id":"CU1XjXnkfFcG","executionInfo":{"status":"ok","timestamp":1747648748699,"user_tz":-330,"elapsed":464,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"f536abcf-b5f7-41ed-efff-37e71be5ce62"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-37-a1e1a588f260>:2: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(x=category_return_rate.values, y=category_return_rate.index, palette='viridis')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Return % per Supplier\n","supplier_return_rate = df.groupby('supplier')['is_returned'].mean().sort_values(ascending=False) * 100\n","print(\"\\nReturn % per Supplier:\\n\", supplier_return_rate)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7z9UjOeNe1w6","executionInfo":{"status":"ok","timestamp":1747648748701,"user_tz":-330,"elapsed":14,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"ba2728d7-d610-45f2-b030-4cce44a51f94"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Return % per Supplier:\n"," supplier\n","BrandD    27.445652\n","BrandB    24.421594\n","BrandC    24.128686\n","BrandA    24.054054\n","Name: is_returned, dtype: float64\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.barplot(x=supplier_return_rate.values, y=supplier_return_rate.index, palette='coolwarm')\n","plt.title('Return % by Supplier')\n","plt.xlabel('Return %')\n","plt.ylabel('Supplier')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":651},"id":"h5rPXVhefAJE","executionInfo":{"status":"ok","timestamp":1747648749051,"user_tz":-330,"elapsed":337,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"d486e9a7-b403-44c1-9bee-e40c12f46450"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-39-c9ce265526cc>:2: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n","\n","  sns.barplot(x=supplier_return_rate.values, y=supplier_return_rate.index, palette='coolwarm')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.preprocessing import OneHotEncoder, StandardScaler\n","from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score, roc_curve"],"metadata":{"id":"cFr4kY_nfKAU","executionInfo":{"status":"ok","timestamp":1747648750395,"user_tz":-330,"elapsed":1343,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('ecommerce_cleaned.csv')"],"metadata":{"id":"CiXDwKq0flSK","executionInfo":{"status":"ok","timestamp":1747648750427,"user_tz":-330,"elapsed":30,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"XIPsjL2-f81L","executionInfo":{"status":"ok","timestamp":1747648755617,"user_tz":-330,"elapsed":52,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"583beb99-45e7-47af-8073-0c88121537ad"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id                0\n","product_id              0\n","product_name            0\n","category                0\n","supplier                0\n","price                   0\n","quantity                0\n","order_date              0\n","customer_id             0\n","region                  0\n","city                    0\n","marketing_channel       0\n","return_date          1125\n","return_reason           0\n","return_status           0\n","is_returned             0\n","return_days             0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>order_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>supplier</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>quantity</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>order_date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>customer_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>marketing_channel</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_date</th>\n","      <td>1125</td>\n","    </tr>\n","    <tr>\n","      <th>return_reason</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>is_returned</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_days</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["df = df.drop(columns=['return_date'])"],"metadata":{"id":"LnA8HXFbjAsq","executionInfo":{"status":"ok","timestamp":1747648796971,"user_tz":-330,"elapsed":11,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":585},"id":"RXgcu4ucjD9G","executionInfo":{"status":"ok","timestamp":1747648798501,"user_tz":-330,"elapsed":36,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"fc064ca8-6d52-4fd9-a1c3-d1a6aba0000f"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["order_id             0\n","product_id           0\n","product_name         0\n","category             0\n","supplier             0\n","price                0\n","quantity             0\n","order_date           0\n","customer_id          0\n","region               0\n","city                 0\n","marketing_channel    0\n","return_reason        0\n","return_status        0\n","is_returned          0\n","return_days          0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>order_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>product_name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>category</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>supplier</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>quantity</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>order_date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>customer_id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>region</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>city</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>marketing_channel</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_reason</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>is_returned</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>return_days</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["# Create synthetic non-returned records\n","non_returned = df.sample(200, replace=True).copy()\n","non_returned['is_returned'] = 0\n","non_returned['return_date'] = pd.NaT\n","non_returned['return_reason'] = None\n","non_returned['return_status'] = 'Not Returned'\n","non_returned['return_days'] = 0\n","\n","# Combine with original returned data\n","df_combined = pd.concat([df, non_returned], ignore_index=True)\n","\n","# Check balance\n","print(df_combined['is_returned'].value_counts())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S_Tbzr5Ikt6B","executionInfo":{"status":"ok","timestamp":1747648802806,"user_tz":-330,"elapsed":10,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"90b39a01-6bc7-4eab-9a57-002184e49b22"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["is_returned\n","0    1325\n","1     375\n","Name: count, dtype: int64\n"]}]},{"cell_type":"code","source":["# Select relevant columns\n","features = ['category', 'supplier', 'price', 'quantity', 'region', 'marketing_channel']\n","X = df_combined[features]\n","y = df_combined['is_returned']\n"],"metadata":{"id":"KeUPdNs-lSib","executionInfo":{"status":"ok","timestamp":1747648803690,"user_tz":-330,"elapsed":3,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["#one hot encode categorical features\n","from sklearn.preprocessing import OneHotEncoder\n","\n","X_cat = X.select_dtypes(include='object')\n","X_num = X.select_dtypes(exclude='object')\n","\n","encoder = OneHotEncoder(drop='first', sparse_output=False)\n","X_cat_encoded = pd.DataFrame(encoder.fit_transform(X_cat), columns=encoder.get_feature_names_out(X_cat.columns))\n","\n","X_final = pd.concat([X_num.reset_index(drop=True), X_cat_encoded], axis=1)\n"],"metadata":{"id":"WbpsPIC4lT22","executionInfo":{"status":"ok","timestamp":1747648804484,"user_tz":-330,"elapsed":21,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["#train-test split\n","from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(\n","    X_final, y, test_size=0.2, random_state=42, stratify=y\n",")\n"],"metadata":{"id":"FyS96j4OlWOg","executionInfo":{"status":"ok","timestamp":1747648805209,"user_tz":-330,"elapsed":1,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["#train logistic regression\n","from sklearn.linear_model import LogisticRegression\n","\n","model = LogisticRegression(max_iter=1000)\n","model.fit(X_train, y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"1y-vP2o2laF-","executionInfo":{"status":"ok","timestamp":1747648806038,"user_tz":-330,"elapsed":102,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"a8de735d-6d49-4ccd-8394-5a7602ef20c1"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(max_iter=1000)"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: #000;\n","  --sklearn-color-text-muted: #666;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: flex;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","  align-items: start;\n","  justify-content: space-between;\n","  gap: 0.5em;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label .caption {\n","  font-size: 0.6rem;\n","  font-weight: lighter;\n","  color: var(--sklearn-color-text-muted);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 0.5em;\n","  text-align: center;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(max_iter=1000)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LogisticRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(max_iter=1000)</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["# Predict on test data\n","y_pred = model.predict(X_test)\n","\n","# Predict probabilities\n","y_proba = model.predict_proba(X_test)[:, 1]  # probability of class 1 (returned)\n"],"metadata":{"id":"Fhm2p9gvlaCp","executionInfo":{"status":"ok","timestamp":1747648806667,"user_tz":-330,"elapsed":7,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score\n","\n","# Classification report\n","print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n","\n","# Confusion matrix\n","print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred))\n","\n","# ROC AUC Score\n","print(\"ROC AUC Score:\", roc_auc_score(y_test, y_proba))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DZ4Z1RwilZ_G","executionInfo":{"status":"ok","timestamp":1747648807443,"user_tz":-330,"elapsed":23,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"a6bf6a94-05b2-420d-c0f5-cd2fd5bdf7fa"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report:\n","               precision    recall  f1-score   support\n","\n","           0       0.78      1.00      0.88       265\n","           1       0.00      0.00      0.00        75\n","\n","    accuracy                           0.78       340\n","   macro avg       0.39      0.50      0.44       340\n","weighted avg       0.61      0.78      0.68       340\n","\n","Confusion Matrix:\n"," [[265   0]\n"," [ 75   0]]\n","ROC AUC Score: 0.44928301886792454\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}]},{"cell_type":"code","source":["# Attach predictions back to original features\n","X_test_copy = X_test.copy()\n","X_test_copy['actual_return'] = y_test.values\n","X_test_copy['predicted_return'] = y_pred\n","X_test_copy['return_probability'] = y_proba\n"],"metadata":{"id":"VJIx1At-mMuN","executionInfo":{"status":"ok","timestamp":1747648808546,"user_tz":-330,"elapsed":7,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["# Identify High-Risk Products\n","high_risk = X_test_copy[X_test_copy['return_probability'] > 0.7]\n","print(\"High-risk predicted returns:\", high_risk.shape[0])\n","high_risk.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":104},"id":"a4H3KEx2mMq2","executionInfo":{"status":"ok","timestamp":1747648809292,"user_tz":-330,"elapsed":52,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"93ccb522-fd7c-47a7-e039-0620f8d279d0"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["High-risk predicted returns: 0\n"]},{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [price, quantity, category_Beauty, category_Books, category_Electronics, category_Home, supplier_BrandB, supplier_BrandC, supplier_BrandD, region_North, region_South, region_West, marketing_channel_Direct, marketing_channel_Email, marketing_channel_Influencer, marketing_channel_Social Media, actual_return, predicted_return, return_probability]\n","Index: []"],"text/html":["\n","  <div id=\"df-6abee833-0e3f-4c37-8878-30831df7414e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>quantity</th>\n","      <th>category_Beauty</th>\n","      <th>category_Books</th>\n","      <th>category_Electronics</th>\n","      <th>category_Home</th>\n","      <th>supplier_BrandB</th>\n","      <th>supplier_BrandC</th>\n","      <th>supplier_BrandD</th>\n","      <th>region_North</th>\n","      <th>region_South</th>\n","      <th>region_West</th>\n","      <th>marketing_channel_Direct</th>\n","      <th>marketing_channel_Email</th>\n","      <th>marketing_channel_Influencer</th>\n","      <th>marketing_channel_Social Media</th>\n","      <th>actual_return</th>\n","      <th>predicted_return</th>\n","      <th>return_probability</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6abee833-0e3f-4c37-8878-30831df7414e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6abee833-0e3f-4c37-8878-30831df7414e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6abee833-0e3f-4c37-8878-30831df7414e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"high_risk","summary":"{\n  \"name\": \"high_risk\",\n  \"rows\": 0,\n  \"fields\": [\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quantity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category_Beauty\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category_Books\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category_Electronics\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category_Home\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"supplier_BrandB\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"supplier_BrandC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"supplier_BrandD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"region_North\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"region_South\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"region_West\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marketing_channel_Direct\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marketing_channel_Email\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marketing_channel_Influencer\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"marketing_channel_Social Media\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"actual_return\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"predicted_return\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"return_probability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["# Export high-risk predictions to csv\n","high_risk.to_csv(\"high_risk_products.csv\", index=False)\n","print(\"Exported high-risk products to high_risk_products.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lPEPO-msmMn9","executionInfo":{"status":"ok","timestamp":1747648810137,"user_tz":-330,"elapsed":30,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}},"outputId":"d87e4664-47de-4cb1-d769-78232af6f613"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Exported high-risk products to high_risk_products.csv\n"]}]},{"cell_type":"code","source":["df.to_csv(\"cleanedd_ecommerce.csv\", index=False)\n","high_risk.to_csv(\"high_risk_products.csv\", index=False)"],"metadata":{"id":"1HgsAg-3mMk4","executionInfo":{"status":"ok","timestamp":1747648852509,"user_tz":-330,"elapsed":27,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"uwRFEn8Lm_qB","executionInfo":{"status":"ok","timestamp":1747648812342,"user_tz":-330,"elapsed":2,"user":{"displayName":"Zohiya Shabreen","userId":"08401507581097201504"}}},"execution_count":55,"outputs":[]}]}